/*
 * -- 2 --
 * Сделать абстрактную фабрику иконок для какого-нибудь ресурса. Например, у нас есть монетки и энергия,
 * в разных местах игры они могут выглядеть по-разному (например, в главном меню иконка монетки будет одной,
 * а в магазине другой). И надо сделать так, чтобы мы могли подменять эту фабрику для спавна нужных иконок.
 * (выбор нужной фабрики сделать как в примере с формами лабиринта). Т.е. не надо городить отдельных сцен, просто надо
 * отработать использование фабрики. Можно сделать UI с двумя Image и при смене фабрики эти картинки должны меняться.
 *
 * -- 3 -- 
 * Сделать спавнер монеток (монетки можно реализовать так как мы делали на первом занятии).
 * Соответственно монетки должны спавниться в каких-то точках, но при этом нельзя чтобы монетка спавнилась в уже вскрытный
 * занятой точке (про спавн в одной точке – это не относится к какому – то паттерну, это просто на оценку реализации
 * (многие тут делают странные вещи)).
 *
 * -- 4 --
 * Доработать пример с визитером из занятия. Добавить в спавнер систему веса (т.е. чтобы спавнер переставал работать,
 * когда вес всех наспавленных врагов становится выше определенного предела).
 *
 * -- 5 --
 * Для декоратора придумать следующую схему: у персонажа есть класс базовых статов (сила, интеллект, ловкость),
 * которые зависят от выбранной расы (орк, эльф, человек). Также можно выбрать специализацию (вор, маг, варвар),
 * они дополнительно оборачивают базовые статы, как-то изменяя характеристики (например маг умножает интеллект на 2), и
 * еще можно выбрать постоянную пассивную способность (3 вида способностей), они тоже могут оборачивать статы, как-то
 * изменяя характеристики пероснажа (например +2 к силе). 
 * Т.е. схема примерно такая: есть класс статов персонажа, и есть некий StatProvider, который возвращает эти статы
 * (сделать какой-то метод). И вот этот StatProvider можно оборачивать (т.е. три вида StatProvider (раса, специализация,
 * пассивная способность), в каждый закидываются в конструкторе нужный тип (тип расы, тип специализации, тип
 * пассивной способности). И на основе этого типа преобразуются статы (через свитч например пройтись по типу расы и 
 * как-то преобразовать в зависимости от типа)
 * Для проверки, просто сконфигурировать персонажа как в примере с хп на уроке.
 * Также советую для удобство в классе статов переопределить операции сложения и умножения или сделать методы какие-то
 * для изменения статов, чтобы было удобнее их изменять
 * 
 */